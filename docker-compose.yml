version: "3.9"
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    network_mode: bridge
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 8000:8000/tcp # Built-in HTTP control server

      # Prowlarr
      - 9696:9696

      # Deluge
      - 8112:8112 # webui
      - 58846:58846 # daemon
      - 6881:6881 # bittorrent
      - 6881:6881/udp # bittorrent

      # Sonarr
      - 8989:8989/tcp # Web UI

      # Radarr
      - 7878:7878

      # Bazarr
      - 6767:6767

      # Readarr
      - 8787:8787

      # Uptime Kuma
      - 3001:3001

      # Jellyfin
      - 8096:8096 # http webui
      - 8920:8920 # https webui (need to setup ssl)
      - 7359:7359/udp # allow clients to discover jellyfin
      - 1900:1900/udp # discover by DNLA and clients

      # Jellyseerr
      - 5055:5055

      # # EmbyStat
      - 6555:6555

      # Caddy Reverse proxy
      - 80:80 # http
      - 443:443 # https

    # command:
    volumes:
      - ${CONFIG_PATH}/gluetun:/config
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    environment:
      # More variables are available, see the Wiki table
      - VPNSP=${VPNSP}
      - VPN_TYPE=${VPN_TYPE}

      # - PUBLICIP_FILE=${PUBLICIP_FILE}
      - COUNTRY=${COUNTRY}
      - CITY=${CITY}
      - ISP=${ISP}
      - OWNED=${OWNED}
      - SERVER_HOSTNAME=${SERVER_HOSTNAME}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESS=${WIREGUARD_ADDRESS}

      - TZ=${TZ} # Timezone for accurate logs times
    restart: always

  deluge:
    image: ghcr.io/linuxserver/deluge
    container_name: deluge
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022 #optional
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${LOCAL_CONFIG}/deluge/plugins:/config/plugins
      - ${CONFIG_PATH}/deluge:/config
      - ${TORRENT_DOWNLOAD}/:/data/torrents
    # ports:
    #   - 8112:8112 # webui
    #   - 58846:58846 # daemon
    #   - 6881:6881 # bittorrent
    #   - 6881:6881/udp # bittorrent
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} # Specify a timezone to use
    volumes:
      - ${CONFIG_PATH}/sonarr:/config # Contains all relevant configuration files.
      - ${MEDIA_DATA_ROOT}:/data
    # ports:
    #   - 8989:8989/tcp # Web UI
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/radarr:/config # Contains all relevant configuration files.
      - ${MEDIA_DATA_ROOT}:/data
    # ports:
    #   - 7878:7878
    restart: unless-stopped

  readarr:
    image: linuxserver/readarr:nightly
    container_name: readarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} # Specify a timezone to use
    volumes:
      - ${CONFIG_PATH}/readarr:/config
      - ${MEDIA_DATA_ROOT}:/data
    # ports:
    #   - 8787:8787
    restart: unless-stopped

  bazarr:
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} # Specify a timezone to use
    volumes:
      - ${CONFIG_PATH}/bazarr:/config # Contains all relevant configuration files.
      - ${MEDIA_DATA_ROOT}/media:/data/media

    # ports:
    #   - 6767:6767
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin:10.8.0-beta3
    container_name: jellyfin
    network_mode: "service:gluetun"
    user: 1000:1000
    group_add:
      - 18
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} # Specify a timezone to use
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    volumes:
      - ${CONFIG_PATH}/jellyfin:/config
      - ${CONFIG_PATH}/jellyfin/transcodes:/config/transcodes
      - ${CONFIG_PATH}/jellyfin/cache:/cache
      - ${MEDIA_DATA_ROOT}/media:/data/media
    # ports:
    # - 8096:8096 # http webui
    # - 8920:8920 # https webui (need to setup ssl)
    # - 7359:7359/udp # allow clients to discover jellyfin
    # - 1900:1900/udp # discover by DNLA and clients
    restart: unless-stopped

  jellyseerr:
      image: fallenbagel/jellyseerr:latest
      container_name: jellyseerr
      network_mode: "service:gluetun"
      environment:
          - LOG_LEVEL=debug
          - TZ=${TZ} # Specify a timezone to use
      volumes:
      - ${CONFIG_PATH}/jellyseerr:/app/config
      # ports:
      #     - 5055:5055
      restart: unless-stopped

  embystat:
      image: uping/embystat:beta
      container_name: embystat
      network_mode: "service:gluetun"
      environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} # Specify a timezone to use
      volumes:
      - ${CONFIG_PATH}/embystat:/config
      # ports:
      #   - 6555:6555
      restart: unless-stopped

  uptime-kuma:
    image: louislam/uptime-kuma
    container_name: uptime-kuma
    network_mode: "service:gluetun"

    volumes:
      - uptime-kuma:/app/data
    # ports:
    #   - 3001:3001

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} # Specify a timezone to use
    volumes:
      - ${CONFIG_PATH}/prowlarr:/config
    # ports:
    #   - 9696:9696
    restart: unless-stopped

  caddy:
    image: ghcr.io/greenpau/authp:v1.1.10
    container_name: caddy
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} # Specify a timezone to use
      - JWT_SHARED_KEY=${JWT_SHARED_KEY}
    # ports:
    # - 80:80
    # - 443:443
    volumes:
      - ${LOCAL_CONFIG}/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${LOCAL_CONFIG}/caddy/caddy_security.conf:/etc/caddy/caddy_security.conf
      - ${LOCAL_CONFIG}/caddy/cert.adamnor.com.pem:/etc/ssl/certs/certificate.pem
      - ${LOCAL_CONFIG}/caddy/cert.origin-pull.pem:/etc/ssl/certs/cert.origin-pull.pem
      - ${LOCAL_CONFIG}/caddy/key.adamnor.com.pem:/etc/ssl/private/key.pem

      # assets
      - ${LOCAL_CONFIG}/caddy/sites/assets:/srv/sites/landing-page/assets
      - ${LOCAL_CONFIG}/caddy/sites/assets:/srv/sites/soon/assets

      # sites
      - ${LOCAL_CONFIG}/caddy/sites/landing-page:/srv/sites/landing-page
      - ${LOCAL_CONFIG}/caddy/sites/soon:/srv/sites/soon

      - ${CONFIG_PATH}/caddy:/config/caddy
      - caddy-data:/data
    restart: unless-stopped

  netdata:
    image: netdata/netdata
    container_name: netdata
    # hostname: example.com # set to fqdn of host
    ports:
      - 19999:19999
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} # Specify a timezone to use
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata

      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - ${LOCAL_CONFIG}/netdata/netdata.conf:/etc/netdata/netdata.conf

  unpackerr:
    image: "golift/unpackerr"
    container_name: "unpackerr"
    network_mode: "service:gluetun"
    volumes:
      - ${TORRENT_DOWNLOAD}/:/data/torrents
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

      # General config
      - UN_DEBUG=false
      - UN_LOG_FILE=None
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0644
      - UN_DIR_MODE=0755

      # Sonarr Config
      - UN_SONARR_0_URL=http://localhost:8989
      - UN_SONARR_0_API_KEY=${API_SONARR}
      - UN_SONARR_0_PATHS_0=/data/torrents/tv
      - UN_SONARR_0_PROTOCOLS=torrent
      - UN_SONARR_0_TIMEOUT=120s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m

      # Radarr Config
      - UN_RADARR_0_URL=http://localhost:7878
      - UN_RADARR_0_API_KEY=${API_RADARR}
      - UN_RADARR_0_PATHS_0=/data/torrents/movies
      - UN_RADARR_0_PROTOCOLS=torrent
      - UN_RADARR_0_TIMEOUT=120s
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_DELETE_DELAY=5m

      # Readarr Config
      - UN_READARR_0_URL=http://localhost:8787
      - UN_READARR_0_API_KEY=${API_READARR}
      - UN_READARR_0_PATHS_0=/data/torrents/books
      - UN_READARR_0_PROTOCOLS=torrent
      - UN_READARR_0_TIMEOUT=10s
      - UN_READARR_0_DELETE_ORIG=false
      - UN_READARR_0_DELETE_DELAY=5m

    security_opt:
      - no-new-privileges:true

volumes:
  uptime-kuma:
    external: true
  caddy-data:
    external: true
  netdataconfig:
    external: true
  netdatalib:
    external: true
  netdatacache:
    external: true
